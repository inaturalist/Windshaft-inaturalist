// Example config file for the windshaft server
// Fill with the appropiate values and rename to config.js

var fs = require("fs");

// Configuration structure name
var config = { };

// Config sections
config.application = { };
config.database = { };
config.redis = { };

// Port which the node.js application will run on
config.application.listen_port = 4000;
config.application.max_zoom_level_for_grids = 12;
config.application.min_zoom_level_for_points = 9;
config.application.cache_max_age = {
  grids: 60 * 60 * 24, // 1 day
  points: 60 * 60, // 1 hour
  places: 60 * 60 * 24 * 7, // 1 week
  taxon_ranges: 60 * 60 * 24 * 7, // 1 week
  taxon_places: 60 * 60 * 24 * 7 // 1 week
}

config.application.debug_function = console.log;
config.application.error_function = console.error;

// database connection params
// The database user
config.database.user = "agusti";
// IP address or name of the postgresql database server
config.database.host = "localhost";
// Port in which the postgresql instance listens for connections
config.database.port = 5432;
// Name of the geometry field
config.database.geometry_field = "geom";
// Spatial reference system id
config.database.srid = 4326;
// Postgresql database name
config.database.database_name = "inaturalist";
// Postgresql database password
config.database.password = null;

// redis-server params
config.redis.host = "127.0.0.1";
config.redis.port = 6379;

// nodetime
config.nodetime = { };

// debugging
config.debug = false;

module.exports = config;
